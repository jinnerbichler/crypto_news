# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-16 23:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DetectedEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateTimeField()),
                ('name', models.TextField()),
                ('url', models.URLField()),
                ('text_source', models.TextField(default='None')),
                ('relevant_coins', multiselectfield.db.fields.MultiSelectField(choices=[('none', 'None'), ('iota', 'Iota'), ('etc', 'Ethereum Classic'), ('eth', 'Ethereum'), ('btc', 'Bitcoin'), ('dash', 'Dash'), ('bth', 'Bitcoin Cash'), ('xrp', 'Ripple'), ('nem', 'NEM'), ('xmr', 'Monero'), ('omg', 'OmiseGO'), ('neo', 'NEO'), ('ltc', 'Litecoin')], default=('none', 'None'), max_length=54)),
                ('validated', models.BooleanField(default=False)),
                ('is_valid', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_created_at', models.DateTimeField(auto_now_add=True)),
                ('creator_url', models.TextField()),
                ('crawler_id', models.TextField()),
                ('title', models.TextField()),
                ('author', models.TextField()),
                ('text', models.TextField()),
                ('url', models.URLField()),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
            },
        ),
        migrations.CreateModel(
            name='RedditComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_created_at', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('author', models.TextField()),
                ('body', models.TextField()),
                ('body_html', models.TextField()),
                ('up_votes', models.IntegerField(default=0)),
                ('down_votes', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Reddit Comment',
                'verbose_name_plural': 'Reddit Comments',
            },
        ),
        migrations.CreateModel(
            name='RedditSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_created_at', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.TextField()),
                ('title', models.TextField()),
                ('self_text', models.TextField()),
                ('self_text_html', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('author', models.TextField()),
                ('url', models.URLField()),
                ('is_video', models.BooleanField(default=False)),
                ('up_votes', models.IntegerField(default=0)),
                ('down_votes', models.IntegerField(default=0)),
                ('num_comments', models.IntegerField()),
                ('is_hot', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Reddit Submission',
                'verbose_name_plural': 'Reddit Submissions',
            },
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_created_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField()),
                ('creator', models.TextField(default='')),
                ('identifier', models.TextField(unique=True)),
                ('linked_token', models.CharField(max_length=10)),
                ('text', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'Twitter Tweet',
                'verbose_name_plural': 'Twitter Tweets',
            },
        ),
        migrations.AlterUniqueTogether(
            name='tweet',
            unique_together=set([('identifier', 'linked_token')]),
        ),
        migrations.AlterUniqueTogether(
            name='redditsubmission',
            unique_together=set([('identifier',)]),
        ),
        migrations.AddField(
            model_name='redditcomment',
            name='parent_submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_scraper.RedditSubmission'),
        ),
        migrations.AlterUniqueTogether(
            name='newsarticle',
            unique_together=set([('crawler_id', 'title', 'url')]),
        ),
        migrations.AlterUniqueTogether(
            name='redditcomment',
            unique_together=set([('identifier',)]),
        ),
    ]
